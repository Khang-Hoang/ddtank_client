package worldboss.view{   import bagAndInfo.cell.CellFactory;   import baglocked.BaglockedManager;   import com.pickgliss.events.FrameEvent;   import com.pickgliss.ui.AlertManager;   import com.pickgliss.ui.ComponentFactory;   import com.pickgliss.ui.controls.SimpleBitmapButton;   import com.pickgliss.ui.controls.alert.BaseAlerFrame;   import com.pickgliss.ui.image.MovieImage;   import com.pickgliss.ui.text.FilterFrameText;   import com.pickgliss.utils.ObjectUtils;   import ddt.data.goods.ShopItemInfo;   import ddt.manager.LanguageMgr;   import ddt.manager.MessageTipManager;   import ddt.manager.PlayerManager;   import ddt.manager.SocketManager;   import ddt.manager.SoundManager;   import ddt.utils.PositionUtils;   import flash.display.Bitmap;   import flash.display.Sprite;   import flash.events.Event;   import flash.events.MouseEvent;   import flash.geom.Rectangle;   import shop.view.ShopGoodItem;   import shop.view.ShopItemCell;   import worldboss.WorldBossManager;      [Event(name="purchase",type="ddt.events.ShopItemEvent")]   [Event(name="collect",type="ddt.events.ShopItemEvent")]   [Event(name="giving",type="ddt.events.ShopItemEvent")]   public class AwardGoodItem extends ShopGoodItem   {            private static const AwardItemCell_Size:int = 61;                   private var _scoreTitleField:FilterFrameText;            private var _scoreField:FilterFrameText;            private var _exchangeBtn:SimpleBitmapButton;            private var _exchangeTxt:FilterFrameText;            private var _awardItem:MovieImage;            private var _tipsframe:BaseAlerFrame;            private var _inputBg:Bitmap;            private var _inputText:FilterFrameText;            private var _maxBtn:SimpleBitmapButton;            private var _text:FilterFrameText;            public function AwardGoodItem() { super(); }
            override public function dispose() : void { }
            override protected function initContent() : void { }
            override protected function creatItemCell() : ShopItemCell { return null; }
            override protected function addEvent() : void { }
            override protected function __itemMouseOver(event:MouseEvent) : void { }
            override protected function __itemMouseOut(event:MouseEvent) : void { }
            override protected function removeEvent() : void { }
            override protected function __payPanelClick(event:MouseEvent) : void { }
            private function changeMaxHandler(event:MouseEvent) : void { }
            private function inputTextChangeHandler(event:Event) : void { }
            private function __onResponse(evt:FrameEvent) : void { }
            public function updata() : void { }
            override public function set shopItemInfo(value:ShopItemInfo) : void { }
   }}