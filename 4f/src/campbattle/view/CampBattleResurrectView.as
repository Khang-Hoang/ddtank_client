package campbattle.view{   import baglocked.BaglockedManager;   import com.pickgliss.events.FrameEvent;   import com.pickgliss.ui.AlertManager;   import com.pickgliss.ui.ComponentFactory;   import com.pickgliss.ui.controls.SimpleBitmapButton;   import com.pickgliss.ui.controls.alert.BaseAlerFrame;   import com.pickgliss.ui.core.Disposeable;   import com.pickgliss.ui.image.ScaleBitmapImage;   import com.pickgliss.ui.text.FilterFrameText;   import com.pickgliss.utils.ObjectUtils;   import consortionBattle.ConsortiaBattleManager;   import consortionBattle.view.ConsBatBuyConfirmView;   import ddt.manager.LanguageMgr;   import ddt.manager.LeavePageManager;   import ddt.manager.MessageTipManager;   import ddt.manager.PlayerManager;   import ddt.manager.SocketManager;   import ddt.manager.SoundManager;   import ddt.utils.PositionUtils;   import flash.display.MovieClip;   import flash.display.Sprite;   import flash.events.Event;   import flash.events.MouseEvent;   import flash.utils.getTimer;   import times.utils.timerManager.TimerJuggler;   import times.utils.timerManager.TimerManager;      public class CampBattleResurrectView extends Sprite implements Disposeable   {            public static const FIGHT:int = 2;                   private var _bg:ScaleBitmapImage;            private var _resurrectBtn:SimpleBitmapButton;            private var _timeCD:MovieClip;            private var _txtProp:FilterFrameText;            private var _totalCount:int;            private var timer:TimerJuggler;            private var _lastCreatTime:int = 0;            public function CampBattleResurrectView(totalCount:int) { super(); }
            private function init() : void { }
            private function addEvent() : void { }
            private function __resurrect(e:MouseEvent) : void { }
            public function __startCount(e:Event) : void { }
            private function removeEvent() : void { }
            protected function promptlyRevive() : void { }
            protected function __resurrectConfirm(evt:FrameEvent) : void { }
            private function setFormat(value:int) : String { return null; }
            protected function __timerComplete(e:Event = null) : void { }
            public function dispose() : void { }
   }}