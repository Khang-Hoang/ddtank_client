package ddt.view.tips{   import cardSystem.CardManager;   import cardSystem.CardTemplateInfoManager;   import cardSystem.GrooveInfoManager;   import cardSystem.data.CardGrooveInfo;   import cardSystem.data.CardInfo;   import cardSystem.data.CardTemplateInfo;   import cardSystem.data.GrooveInfo;   import cardSystem.data.SetsInfo;   import cardSystem.data.SetsPropertyInfo;   import com.pickgliss.ui.ComponentFactory;   import com.pickgliss.ui.core.Disposeable;   import com.pickgliss.ui.image.ScaleBitmapImage;   import com.pickgliss.ui.image.ScaleFrameImage;   import com.pickgliss.ui.text.FilterFrameText;   import com.pickgliss.ui.tip.BaseTip;   import com.pickgliss.ui.tip.ITip;   import com.pickgliss.utils.ObjectUtils;   import ddt.data.goods.QualityType;   import ddt.data.player.PlayerInfo;   import ddt.manager.LanguageMgr;   import ddt.manager.PlayerManager;   import ddt.utils.PositionUtils;   import flash.display.Bitmap;   import road7th.data.DictionaryData;      public class CardsTipPanel extends BaseTip implements ITip, Disposeable   {            public static const THISWIDTH:int = 300;            public static const CARDTYPE:Array = [LanguageMgr.GetTranslation("BrowseLeftMenuView.equipCard"),LanguageMgr.GetTranslation("BrowseLeftMenuView.freakCard")];            public static const CARDTYPE_VICE_MAIN:Array = [LanguageMgr.GetTranslation("ddt.cardSystem.CardsTipPanel.vice"),LanguageMgr.GetTranslation("ddt.cardSystem.CardsTipPanel.main")];                   private var _bg:ScaleBitmapImage;            private var _cardName:FilterFrameText;            private var _cardType:Bitmap;            private var _cardTypeDetail:FilterFrameText;            private var _cardLevel:Bitmap;            private var _cardLevelDetail:FilterFrameText;            private var _EpDetail:FilterFrameText;            private var _Explain:FilterFrameText;            private var _Quality:FilterFrameText;            private var _QualityDetail:FilterFrameText;            private var _rule1:ScaleBitmapImage;            private var _band:ScaleFrameImage;            private var _propVec:Vector.<FilterFrameText>;            private var _rule2:ScaleBitmapImage;            private var _setsName:FilterFrameText;            private var _setsPropVec:Vector.<FilterFrameText>;            private var _validity:FilterFrameText;            private var _cardInfo:CardInfo;            private var _place:int;            private var _isGroove:Boolean;            private var _cardGrooveInfo:GrooveInfo;            private var _thisHeight:int;            public function CardsTipPanel() { super(); }
            override public function dispose() : void { }
            override protected function init() : void { }
            override protected function addChildren() : void { }
            override public function get tipData() : Object { return null; }
            override public function set tipData(data:Object) : void { }
            private function upview() : void { }
            private function showHeadPart() : void { }
            private function showMiddlePart() : void { }
            private function showButtomPart() : void { }
            private function compareFun(x:int, y:int) : Number { return 0; }
            private function upBackground() : void { }
            private function updateWH() : void { }
   }}